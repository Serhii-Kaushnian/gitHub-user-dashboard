{"version":3,"file":"static/js/163.53970e39.chunk.js","mappings":"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","sources":["components/Info/Info.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","pages/Dashboard/Dashboard.jsx","pages/Followers/Followers.styled.js","pages/Followers/Followers.jsx","pages/Repos/Repos.styled.js","pages/Repos/Repos.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getUser } from \"../../redux/userData/userDataSelectors\";\nimport { Card } from \"../\";\n\nconst UserInfo = () => {\n  const user = useSelector(getUser);\n  return (\n    user && (\n      <>\n        <Card user={user} />\n      </>\n    )\n  );\n};\n\nexport default UserInfo;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledUl = styled.ul`\r\n  margin: 0;\r\n`;\r\nexport const StyledLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const CardWrapper = styled.div`\r\n  display: flex;\r\n  background-color: #e7eaf6;\r\n  border-radius: 25px;\r\n\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StyledParagraph } from \"../HeaderLogoLink/HeaderLogoLink.styled\";\nimport { StyledLi, StyledUl, CardWrapper } from \"./Card.styled\";\nconst Card = ({ user }) => {\n  return (\n    user && (\n      <CardWrapper>\n        <img\n          src={user.avatar_url}\n          alt='user avatar'\n          style={{\n            display: \"block\",\n            borderRadius: \"10px\",\n            margin: \"15px\",\n            width: \"250px\",\n            height: \"250px\",\n          }}\n        />\n        <StyledLi>\n          <StyledUl>\n            {\" \"}\n            {user.login && <StyledParagraph>Login: {user.login}</StyledParagraph>}\n          </StyledUl>\n          <StyledUl>{user.name && <StyledParagraph>Name: {user.name}</StyledParagraph>}</StyledUl>\n          <StyledUl>\n            {user.location && <StyledParagraph>Location: {user.location}</StyledParagraph>}\n          </StyledUl>\n          <StyledUl>\n            {\" \"}\n            {user.email && <StyledParagraph>E-Mail: {user.email}</StyledParagraph>}\n          </StyledUl>\n          <StyledUl>\n            {\" \"}\n            {user.twitter_username && (\n              <StyledParagraph>Twitter: {user.twitter_username}</StyledParagraph>\n            )}\n          </StyledUl>\n          <StyledUl>\n            {user.blog && (\n              <StyledParagraph>\n                Blog:{\" \"}\n                <Link to={user.blog} target='new'>\n                  {user.blog}\n                </Link>\n              </StyledParagraph>\n            )}\n          </StyledUl>\n        </StyledLi>\n      </CardWrapper>\n    )\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport { Info } from \"../../components\";\n\nconst Dashboard = () => {\n  return (\n    <main\n      style={{\n        height: \"calc(100% - 100px)\",\n\n        backgroundColor: \" #a2a8d3\",\n        padding: \"10px\",\n      }}\n    >\n      <Info></Info>\n    </main>\n  );\n};\n\nexport default Dashboard;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FollowersWrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\nexport const FollowersList = styled.li`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 10px;\r\n  list-style: none;\r\n`;\r\nexport const FollowersListElement = styled.ul`\r\n  background-color: #e7eaf6;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n`;\r\nexport const FollowersImage = styled.img`\r\n  display: block;\r\n  border-radius: 10px;\r\n  margin: 5px;\r\n  width: 200px;\r\n`;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFollowers } from \"../../redux/userData/userDataOperations\";\nimport {\n  getUser,\n  getUserFollowers,\n  isLoadingFollowers,\n} from \"../../redux/userData/userDataSelectors\";\nimport { StyledLink, StyledParagraph } from \"../../components/HeaderLogoLink/HeaderLogoLink.styled\";\nimport {\n  FollowersWrapper,\n  FollowersList,\n  FollowersListElement,\n  FollowersImage,\n} from \"./Followers.styled\";\nimport { LoaderPage } from \"../../components/Loader/Loader\";\n\nconst Followers = () => {\n  const dispatch = useDispatch();\n  const userFollowers = useSelector(getUserFollowers);\n  const isLoading = useSelector(isLoadingFollowers);\n  const user = useSelector(getUser);\n\n  useEffect(() => {\n    if (user) dispatch(getFollowers(user.followers_url));\n  }, [dispatch, user]);\n\n  return (\n    user && (\n      <FollowersWrapper>\n        {isLoading && <LoaderPage />}\n        <FollowersList>\n          {userFollowers &&\n            userFollowers.map((value) => (\n              <FollowersListElement key={value.id}>\n                <FollowersImage src={value.avatar_url} alt={`follower ${value.id}`} />\n                <StyledParagraph>{value.login}</StyledParagraph>\n                <StyledLink to={value.html_url} target='new'>\n                  To {value.login}'s gitHub page\n                </StyledLink>\n              </FollowersListElement>\n            ))}\n        </FollowersList>\n      </FollowersWrapper>\n    )\n  );\n};\n\nexport default Followers;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ReposWrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\nexport const ReposList = styled.li`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 10px;\r\n  list-style: none;\r\n`;\r\nexport const ReposListElement = styled.ul`\r\n  background-color: #e7eaf6;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n`;\r\nexport const ReposParagraph = styled.p`\r\n  max-width: 200px;\r\n  overflow: auto;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRepos } from \"../../redux/userData/userDataOperations\";\nimport { getUser, getUserRepos, isLoadingRepos } from \"../../redux/userData/userDataSelectors\";\n\nimport { ReposWrapper, ReposList, ReposListElement, ReposParagraph } from \"./Repos.styled\";\nimport { StyledLink } from \"../../components/HeaderLogoLink/HeaderLogoLink.styled\";\n\nimport { LoaderPage } from \"../../components/Loader/Loader\";\n\nconst Repos = () => {\n  const dispatch = useDispatch();\n  const UserRepos = useSelector(getUserRepos);\n  const isLoading = useSelector(isLoadingRepos);\n\n  const user = useSelector(getUser);\n\n  useEffect(() => {\n    if (user) dispatch(getRepos(user.repos_url));\n  }, [dispatch, user]);\n\n  return (\n    user && (\n      <ReposWrapper>\n        {isLoading && <LoaderPage />}\n        <ReposList>\n          {UserRepos &&\n            UserRepos.map((value) => (\n              <ReposListElement key={value.id}>\n                <ReposParagraph>{value.name}</ReposParagraph>\n                <ReposParagraph>{value.description}</ReposParagraph>\n                <StyledLink to={value.html_url} target='new'>\n                  To repository\n                </StyledLink>\n              </ReposListElement>\n            ))}\n        </ReposList>\n      </ReposWrapper>\n    )\n  );\n};\n\nexport default Repos;\n"],"names":["user","useSelector","getUser","_jsx","_Fragment","children","Card","StyledUl","styled","ul","_templateObject","_taggedTemplateLiteral","StyledLi","li","_templateObject2","CardWrapper","div","_templateObject3","_ref","_jsxs","src","avatar_url","alt","style","display","borderRadius","margin","width","height","login","StyledParagraph","name","location","email","twitter_username","blog","Link","to","target","backgroundColor","padding","Info","FollowersWrapper","FollowersList","FollowersListElement","FollowersImage","img","_templateObject4","dispatch","useDispatch","userFollowers","getUserFollowers","isLoading","isLoadingFollowers","useEffect","getFollowers","followers_url","LoaderPage","map","value","concat","id","StyledLink","html_url","ReposWrapper","ReposList","ReposListElement","ReposParagraph","p","UserRepos","getUserRepos","isLoadingRepos","getRepos","repos_url","description"],"sourceRoot":""}