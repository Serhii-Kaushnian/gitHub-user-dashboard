{"version":3,"file":"static/js/263.bd3f6a10.chunk.js","mappings":"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","sources":["components/Info/Info.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","pages/Dashboard/Dashboard.styled.js","pages/Dashboard/Dashboard.jsx","pages/Followers/Followers.styled.js","pages/Followers/Followers.jsx","pages/Repos/Repos.styled.js","pages/Repos/Repos.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getUser } from \"../../redux/userData/userDataSelectors\";\nimport { Card } from \"../\";\n\nconst UserInfo = () => {\n  const user = useSelector(getUser);\n\n  return (\n    user && (\n      <>\n        <Card user={user} />\n      </>\n    )\n  );\n};\n\nexport default UserInfo;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledUl = styled.ul`\r\n  margin: 0;\r\n  width: 100%;\r\n`;\r\nexport const CardImg = styled.img`\r\n  display: block;\r\n  border-radius: 10px;\r\n  margin: 15px;\r\n  width: 250px;\r\n  height: 250px;\r\n`;\r\nexport const StyledLi = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const CardWrapper = styled.div`\r\n  display: flex;\r\n  background-color: #e7eaf6;\r\n  border-radius: 25px;\r\n\r\n  padding: 10px;\r\n\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StyledParagraph } from \"../HeaderLogoLink/HeaderLogoLink.styled\";\nimport { StyledLi, StyledUl, CardWrapper, CardImg } from \"./Card.styled\";\nconst Card = ({ user }) => {\n  return (\n    user && (\n      <CardWrapper>\n        <CardImg src={user.avatar_url} alt='user avatar' />\n        <StyledLi>\n          <StyledUl>\n            {\" \"}\n            {user.login && <StyledParagraph>Login: {user.login}</StyledParagraph>}\n          </StyledUl>\n          <StyledUl>{user.name && <StyledParagraph>Name: {user.name}</StyledParagraph>}</StyledUl>\n          <StyledUl>\n            {user.location && <StyledParagraph>Location: {user.location}</StyledParagraph>}\n          </StyledUl>\n          <StyledUl>\n            {\" \"}\n            {user.email && <StyledParagraph>E-Mail: {user.email}</StyledParagraph>}\n          </StyledUl>\n          <StyledUl>\n            {\" \"}\n            {user.twitter_username && (\n              <StyledParagraph>Twitter: {user.twitter_username}</StyledParagraph>\n            )}\n          </StyledUl>\n          <StyledUl>\n            {user.blog && (\n              <StyledParagraph>\n                Blog:{\" \"}\n                <Link to={user.blog} target='new'>\n                  {user.blog.slice(0, 24)}\n                </Link>\n              </StyledParagraph>\n            )}\n          </StyledUl>\n        </StyledLi>\n      </CardWrapper>\n    )\n  );\n};\n\nexport default Card;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainWrapper = styled.main`\r\n  height: calc(100% - 100px);\r\n\r\n  background-color: #a2a8d3;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\nimport { Info } from \"../../components\";\nimport { MainWrapper } from \"./Dashboard.styled\";\nconst Dashboard = () => {\n  return (\n    <MainWrapper>\n      <Info></Info>\n    </MainWrapper>\n  );\n};\n\nexport default Dashboard;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FollowersWrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\nexport const FollowersList = styled.li`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 10px;\r\n  list-style: none;\r\n`;\r\nexport const FollowersListElement = styled.ul`\r\n  background-color: #e7eaf6;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n`;\r\nexport const FollowersImage = styled.img`\r\n  display: block;\r\n  border-radius: 10px;\r\n  margin: 5px;\r\n  width: 200px;\r\n`;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFollowers } from \"../../redux/userData/userDataOperations\";\nimport {\n  getUser,\n  getUserFollowers,\n  isLoadingFollowers,\n} from \"../../redux/userData/userDataSelectors\";\nimport { StyledLink, StyledParagraph } from \"../../components/HeaderLogoLink/HeaderLogoLink.styled\";\nimport {\n  FollowersWrapper,\n  FollowersList,\n  FollowersListElement,\n  FollowersImage,\n} from \"./Followers.styled\";\nimport { LoaderPage } from \"../../components/Loader/Loader\";\n\nconst Followers = () => {\n  const dispatch = useDispatch();\n  const userFollowers = useSelector(getUserFollowers);\n  const isLoading = useSelector(isLoadingFollowers);\n  const user = useSelector(getUser);\n\n  useEffect(() => {\n    if (user) dispatch(getFollowers(user.followers_url));\n  }, [dispatch, user]);\n\n  return (\n    user && (\n      <FollowersWrapper>\n        {isLoading && <LoaderPage />}\n        <FollowersList>\n          {userFollowers &&\n            userFollowers.map((value) => (\n              <FollowersListElement key={value.id}>\n                <FollowersImage src={value.avatar_url} alt={`follower ${value.id}`} />\n                <StyledParagraph>{value.login}</StyledParagraph>\n                <StyledLink to={value.html_url} target='new'>\n                  To {value.login}'s gitHub page\n                </StyledLink>\n              </FollowersListElement>\n            ))}\n        </FollowersList>\n      </FollowersWrapper>\n    )\n  );\n};\n\nexport default Followers;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ReposWrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\nexport const ReposList = styled.li`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 10px;\r\n  list-style: none;\r\n`;\r\nexport const ReposListElement = styled.ul`\r\n  background-color: #e7eaf6;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n`;\r\nexport const ReposParagraph = styled.p`\r\n  max-width: 200px;\r\n  overflow: auto;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRepos } from \"../../redux/userData/userDataOperations\";\nimport { getUser, getUserRepos, isLoadingRepos } from \"../../redux/userData/userDataSelectors\";\n\nimport { ReposWrapper, ReposList, ReposListElement, ReposParagraph } from \"./Repos.styled\";\nimport { StyledLink } from \"../../components/HeaderLogoLink/HeaderLogoLink.styled\";\n\nimport { LoaderPage } from \"../../components/Loader/Loader\";\n\nconst Repos = () => {\n  const dispatch = useDispatch();\n  const UserRepos = useSelector(getUserRepos);\n  const isLoading = useSelector(isLoadingRepos);\n\n  const user = useSelector(getUser);\n\n  useEffect(() => {\n    if (user) dispatch(getRepos(user.repos_url));\n  }, [dispatch, user]);\n\n  return (\n    user && (\n      <ReposWrapper>\n        {isLoading && <LoaderPage />}\n        <ReposList>\n          {UserRepos &&\n            UserRepos.map((value) => (\n              <ReposListElement key={value.id}>\n                <ReposParagraph>{value.name}</ReposParagraph>\n                <ReposParagraph>{value.description}</ReposParagraph>\n                <StyledLink to={value.html_url} target='new'>\n                  To repository\n                </StyledLink>\n              </ReposListElement>\n            ))}\n        </ReposList>\n      </ReposWrapper>\n    )\n  );\n};\n\nexport default Repos;\n"],"names":["user","useSelector","getUser","_jsx","_Fragment","children","Card","StyledUl","styled","ul","_templateObject","_taggedTemplateLiteral","CardImg","img","_templateObject2","StyledLi","li","_templateObject3","CardWrapper","div","_templateObject4","_ref","_jsxs","src","avatar_url","alt","login","StyledParagraph","name","location","email","twitter_username","blog","Link","to","target","slice","MainWrapper","main","Info","FollowersWrapper","FollowersList","FollowersListElement","FollowersImage","dispatch","useDispatch","userFollowers","getUserFollowers","isLoading","isLoadingFollowers","useEffect","getFollowers","followers_url","LoaderPage","map","value","concat","id","StyledLink","html_url","ReposWrapper","ReposList","ReposListElement","ReposParagraph","p","UserRepos","getUserRepos","isLoadingRepos","getRepos","repos_url","description"],"sourceRoot":""}