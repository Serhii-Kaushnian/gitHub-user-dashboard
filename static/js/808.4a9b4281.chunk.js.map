{"version":3,"file":"static/js/808.4a9b4281.chunk.js","mappings":"sPAEaA,EAAeC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAGzBC,EAAYJ,EAAAA,EAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qIAMrBI,EAAmBP,EAAAA,EAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mMAU5BO,EAAiBV,EAAAA,EAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uE,6BCqBtC,EAhCc,WACZ,IAAMU,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAOJ,EAAAA,EAAAA,IAAYK,EAAAA,IAMzB,OAJAC,EAAAA,EAAAA,YAAU,WACJF,GAAMP,GAASU,EAAAA,EAAAA,IAASH,EAAKI,WACnC,GAAG,CAACX,EAAUO,IAGZA,IACEK,EAAAA,EAAAA,MAAC1B,EAAY,CAAA2B,SAAA,CACVR,IAAaS,EAAAA,EAAAA,KAACC,EAAAA,GAAU,KACzBD,EAAAA,EAAAA,KAACvB,EAAS,CAAAsB,SACPX,GACCA,EAAUc,KAAI,SAACC,GAAK,OAClBL,EAAAA,EAAAA,MAAClB,EAAgB,CAAAmB,SAAA,EACfC,EAAAA,EAAAA,KAACjB,EAAc,CAAAgB,SAAEI,EAAMC,QACvBJ,EAAAA,EAAAA,KAACjB,EAAc,CAAAgB,SAAEI,EAAME,eACvBL,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,GAAIJ,EAAMK,SAAUC,OAAO,MAAKV,SAAC,oBAHxBI,EAAMO,GAMV,QAMjC,C","sources":["pages/Repos/Repos.styled.js","pages/Repos/Repos.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ReposWrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\nexport const ReposList = styled.li`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 10px;\r\n  list-style: none;\r\n`;\r\nexport const ReposListElement = styled.ul`\r\n  background-color: #e7eaf6;\r\n  margin: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n`;\r\nexport const ReposParagraph = styled.p`\r\n  max-width: 200px;\r\n  overflow: auto;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRepos } from \"../../redux/userData/userDataOperations\";\nimport { getUser, getUserRepos, isLoadingRepos } from \"../../redux/userData/userDataSelectors\";\n\nimport { ReposWrapper, ReposList, ReposListElement, ReposParagraph } from \"./Repos.styled\";\nimport { StyledLink } from \"../../components/HeaderLogoLink/HeaderLogoLink.styled\";\n\nimport { LoaderPage } from \"../../components/Loader/Loader\";\n\nconst Repos = () => {\n  const dispatch = useDispatch();\n  const UserRepos = useSelector(getUserRepos);\n  const isLoading = useSelector(isLoadingRepos);\n\n  const user = useSelector(getUser);\n\n  useEffect(() => {\n    if (user) dispatch(getRepos(user.repos_url));\n  }, [dispatch, user]);\n\n  return (\n    user && (\n      <ReposWrapper>\n        {isLoading && <LoaderPage />}\n        <ReposList>\n          {UserRepos &&\n            UserRepos.map((value) => (\n              <ReposListElement key={value.id}>\n                <ReposParagraph>{value.name}</ReposParagraph>\n                <ReposParagraph>{value.description}</ReposParagraph>\n                <StyledLink to={value.html_url} target='new'>\n                  To repository\n                </StyledLink>\n              </ReposListElement>\n            ))}\n        </ReposList>\n      </ReposWrapper>\n    )\n  );\n};\n\nexport default Repos;\n"],"names":["ReposWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ReposList","li","_templateObject2","ReposListElement","ul","_templateObject3","ReposParagraph","p","_templateObject4","dispatch","useDispatch","UserRepos","useSelector","getUserRepos","isLoading","isLoadingRepos","user","getUser","useEffect","getRepos","repos_url","_jsxs","children","_jsx","LoaderPage","map","value","name","description","StyledLink","to","html_url","target","id"],"sourceRoot":""}